@model IEnumerable<StudentTaskVM>
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Index";
    var studentId = UserManager.GetUserId(User);
}

<h1>All Tasks</h1>
<br />
<br />


@if (Model.Count() > 0)
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(D => D.Date)</th>
                <th>@Html.DisplayNameFor(D => D.Description)</th>
                <th>@Html.DisplayNameFor(D => D.Period)</th>
                <th>@Html.DisplayNameFor(D => D.TeacherName)</th>
                <th>@Html.DisplayNameFor(D => D.Status)</th>
                <th>Update</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model)
            {
                @if (studentId == task.StudentId)
                {
                    <tr>
                        <td>@task.Date</td>
                        <td>@task.Description</td>
                        <td>@task.Period</td>
                        <td>@task.TeacherName</td>
                        <td>@task.Status</td>
                        <td>
                            <a asp-action="EditStudent" asp-route-Id="@task.Id" class="btn btn-success">
                                <i class="fas fa-edit"></i>Update
                            </a>
                        </td>

                    </tr>
                }
            }
        </tbody>
    </table>
}
else
{
    <div class="mt-4 alert alert-warning">
        <h3>There is No Tasks:(</h3>
    </div>
}



